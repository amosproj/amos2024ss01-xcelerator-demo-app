generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// see https://developer.siemens.com/insights-hub/docs/apis/iot-iottimeseries/api-iottimeseries-overview.html
model TimeSeriesItem {
    // this id needs to be set to achieve the many-to-many relation between TimeSeriesItem and TimeSeriesVariable
    id              Int    @id @default(autoincrement())
    propertySetName String

    data TimeSeriesDataItem[]

    assetId   String
    Variables TimeSeriesVariable[]
    Asset     Asset                @relation(fields: [assetId], references: [id])

    @@unique([assetId, propertySetName])
}

model TimeSeriesVariable {
    id             Int              @id @default(autoincrement())
    name           String
    dataType       String
    unit           String
    TimeSeriesItem TimeSeriesItem[]

    @@unique([name, dataType, unit])
}

// see https://developer.siemens.com/insights-hub/docs/apis/iot-iottimeseries/api-iottimeseries-overview.html
model TimeSeriesDataItem {
    time     DateTime
    data     Json?
    name     String?
    location Json?

    // Foreign keys
    timeSeriesAssetId             String
    timeSeriesItemPropertySetName String
    timeSeriesItem                TimeSeriesItem @relation(fields: [timeSeriesAssetId, timeSeriesItemPropertySetName], references: [assetId, propertySetName])

    @@id([timeSeriesAssetId, timeSeriesItemPropertySetName, time])
}

model Asset {
    id          String         @id
    name        String
    description String?
    location    AssetLocation?
    typeId      String
    Variables   Json?

    timeSeriesItems TimeSeriesItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model AssetLocation {
    id            Int    @id @default(autoincrement())
    country       String
    region        String
    locality      String
    streetAddress String
    postalCode    String
    longitude     Float
    latitude      Float

    Assetid String @unique
    Asset   Asset  @relation(fields: [Assetid], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// TODO: Add User model + relation
// TODO: Save dueDate as DateTime
// see https://developer.siemens.com/insights-hub/docs/apis/advanced-casemanagement/api-casemanagement-api.html
model Case {
    id          Int          @id @default(autoincrement())
    handle      String
    dueDate     DateTime // see https://stackoverflow.com/a/52823241
    title       String
    type        CaseType     @default(PLANNED)
    status      CaseStatus   @default(OPEN)
    // assignedTo   User   @relation(fields: [assignedToId], references: [id])
    // assignedToId Int
    description String
    source      String
    priority    CasePriority
    createdBy   String
    eTag        String
    modifiedBy  String       @default("")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum CaseStatus {
    OPEN
    INPROGRESS
    ONHOLD
    DONE
    OVERDUE
    CANCELLED
    ARCHIVED
}

enum CasePriority {
    LOW
    MEDIUM
    HIGH
    EMERGENCY
}

enum CaseType {
    PLANNED
    INCIDENT
    ANNOTATION
}
